/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/G72uRcWKpZT
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

 import { Inter } from 'next/font/google'

 inter({
 subsets: ['latin'],
 display: 'swap',
 })

 To read more about using these font, please visit the Next.js documentation:
 - App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
 - Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
 **/
import {Card, CardHeader, CardTitle, CardDescription, CardContent} from "@/components/ui/card"
import {Label} from "@/components/ui/label"
import {Input} from "@/components/ui/input"
import {Textarea} from "@/components/ui/textarea"
import {Button} from "@/components/ui/button"
import {useState} from "react";
import axios from "axios";

type Restaurant = {
    _id: number;
    name: string;
    location: string;
    image: string;
};

type Props = {
    restaurant: Restaurant | null;
    closeModal: () => void;
};

export function BookTableModal({restaurant, closeModal}: Props) {

    const [formData, setFormData] = useState({
        name: '',
        email: '',
        phone: '',
        date: '',
        message: ''
    });

    const handleChange = (e: { target: { name: any; value: any } }) => {
        setFormData({...formData, [e.target.name]: e.target.value});
    };

    const handleSubmit = async (e: { preventDefault: () => void }) => {
        e.preventDefault();
        try {
            console.log(formData);

            const response = await axios.post('/api/reservations', {
                restaurantId: restaurant?._id,
                name: formData.name,
                email: formData.email,
                phone: formData.phone,
                date: formData.date,
                message: formData.message
            });
            alert('Reservation created successfully!');
            closeModal();
        } catch (error) {
            // @ts-ignore
            console.log(error);
            // @ts-ignore
            const errorMessage = error.response?.data?.error || "An unknown error occurred";
            alert('Failed to create reservation: ' + errorMessage);
        }
    };

    return (
        <Card className="max-w-md mx-auto p-6 sm:p-8">
            <CardHeader>
                <CardTitle className="text-2xl font-bold">Book Your Table at {restaurant?.name}</CardTitle>
                <CardDescription>Fill out the form below to make a reservation at our restaurant.</CardDescription>
            </CardHeader>
            <CardContent>
                <div className="grid grid-cols-2 gap-4">
                    <div className="grid gap-2">
                        <Label htmlFor="name">Name</Label>
                        <Input name="name" value={formData.name} onChange={handleChange} placeholder="Name" required/>
                    </div>
                    <div className="grid gap-2">
                        <Label htmlFor="email">Email</Label>
                        <Input type="email" name="email" value={formData.email} onChange={handleChange}
                               placeholder="Email"
                               required/>
                    </div>
                </div>
                <div className="grid gap-2 mt-5">
                    <Label htmlFor="phone">Phone</Label>
                    <Input type="tel" name="phone" value={formData.phone} onChange={handleChange} placeholder="Phone"
                           required/>
                </div>
                <div className="grid gap-2 mt-5">
                    <Label htmlFor="file">Date</Label>
                    <Input type="date" name="date" value={formData.date} onChange={handleChange} placeholder="Date"
                           required/>
                </div>
                <div className="grid gap-2 mt-5">
                    <Label htmlFor="message">Message</Label>
                    <Textarea name="message" value={formData.message} onChange={handleChange} placeholder="Message"
                              rows={4}/>
                </div>
                <div className={"flex flex-col"}>

                    <Button onClick={handleSubmit} className="bg-primary text-primary-foreground mt-5 mb-5">
                        Book Table
                    </Button>
                    <Button type="submit" variant={"destructive"} className="text-primary-foreground"
                            onClick={closeModal}>
                        Cancel
                    </Button>
                </div>

            </CardContent>
        </Card>
    )
}
